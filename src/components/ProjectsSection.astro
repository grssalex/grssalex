---
import { Image } from 'astro:assets';

const projects = [
  {
    title: 'E-commerce Platform',
    description: 'Une plateforme e-commerce moderne construite avec React, Node.js et MongoDB. Comprend l authentification des utilisateurs, le paiement et la gestion des produits.',
    technologies: ['React', 'Node.js', 'MongoDB', 'Stripe'],
    image: '/projects/ecommerce.jpg',
    githubUrl: 'https://github.com/grssalex/ecommerce-platform',
    liveUrl: 'https://ecommerce-demo.grssalex.dev'
  },
  {
    title: 'Task Management App',
    description: 'Application de gestion de tâches avec des fonctionnalités drag-and-drop, filtrage et assignation d\'équipe. Construite avec Vue.js et Firebase.',
    technologies: ['Vue.js', 'Firebase', 'Vuex', 'Tailwind CSS'],
    image: '/projects/taskapp.jpg',
    githubUrl: 'https://github.com/grssalex/task-management-app',
    liveUrl: 'https://tasks.grssalex.dev'
  },
  {
    title: 'Weather Dashboard',
    description: 'Dashboard météo en temps réel utilisant l\'API OpenWeatherMap, avec géolocalisation, prévisions à 5 jours et interface intuitive.',
    technologies: ['JavaScript', 'Chart.js', 'RESTful API', 'Geolocation'],
    image: '/projects/weather.jpg',
    githubUrl: 'https://github.com/grssalex/weather-dashboard',
    liveUrl: 'https://weather.grssalex.dev'
  },
  {
    title: 'Portfolio Website',
    description: 'Ce site portfolio créé avec Astro, offrant d\'excellentes performances et une expérience utilisateur moderne.',
    technologies: ['Astro', 'GSAP', 'JavaScript', 'CSS'],
    image: '/projects/portfolio.jpg',
    githubUrl: 'https://github.com/grssalex/portfolio',
    liveUrl: 'https://grssalex.dev'
  }
];
---

<section id="projects" class="projects-section">
  <div class="container">
    <h2 class="section-title">Mes <span class="text-gradient">Projets</span></h2>
    
    <div class="projects-grid">
      {projects.map((project, index) => (
        <div class="project-card" data-project-index={index}>
          <div class="project-content">
            <div class="project-image-container">
              <img 
                src={project.image} 
                alt={project.title} 
                class="project-image" 
                onError={(e) => e.target.src = '/placeholder-project.jpg'}
              />
              <div class="project-overlay">
                <div class="project-links">
                  <a href={project.githubUrl} target="_blank" rel="noopener noreferrer" class="project-link">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>
                    Code
                  </a>
                  <a href={project.liveUrl} target="_blank" rel="noopener noreferrer" class="project-link">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="15 3 21 3 21 9"></polyline><line x1="21" y1="3" x2="14" y2="10"></line><path d="M10 14L3 21"></path><path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path></svg>
                    Demo
                  </a>
                </div>
              </div>
            </div>
            
            <div class="project-info">
              <h3 class="project-title">{project.title}</h3>
              <p class="project-description">{project.description}</p>
              
              <div class="project-technologies">
                {project.technologies.map((tech) => (
                  <span class="project-tech">{tech}</span>
                ))}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';
  import Atropos from 'atropos';
  
  document.addEventListener('DOMContentLoaded', () => {
    gsap.registerPlugin(ScrollTrigger);
    
    // Initialize 3D hover effect for project cards
    document.querySelectorAll('.project-card').forEach(card => {
      Atropos({
        el: card,
        shadow: false,
        highlight: false,
        rotateXMax: 10,
        rotateYMax: 10,
        stretchX: 0,
        stretchY: 0,
        activeOffset: 40
      });
    });
    
    // Animate project cards when they come into view
    gsap.from('.project-card', {
      y: 100,
      opacity: 0,
      duration: 0.8,
      stagger: 0.2,
      scrollTrigger: {
        trigger: '.projects-grid',
        start: 'top 80%',
      }
    });
    
    // Animate section title
    gsap.from('.projects-section .section-title', {
      y: 50,
      opacity: 0,
      duration: 0.8,
      scrollTrigger: {
        trigger: '.projects-section',
        start: 'top 80%',
      }
    });
  });
</script>

<style>
  .projects-section {
    padding: 8rem 2rem;
    position: relative;
  }
  
  .container {
    max-width: 1400px;
    margin: 0 auto;
  }
  
  .section-title {
    font-size: 3rem;
    margin-bottom: 4rem;
    text-align: center;
  }
  
  .text-gradient {
    background-image: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    color: transparent;
  }
  
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2.5rem;
  }
  
  .project-card {
    border-radius: 1rem;
    overflow: hidden;
    background-color: var(--card-bg);
    box-shadow: var(--shadow-md);
    border: 1px solid var(--border-color);
    transition: transform var(--transition), box-shadow var(--transition);
    height: 100%;
  }
  
  .project-content {
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .project-image-container {
    position: relative;
    overflow: hidden;
    aspect-ratio: 16 / 9;
  }
  
  .project-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }
  
  .project-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .project-image-container:hover .project-overlay {
    opacity: 1;
  }
  
  .project-image-container:hover .project-image {
    transform: scale(1.05);
  }
  
  .project-links {
    display: flex;
    gap: 1rem;
  }
  
  .project-link {
    background-color: var(--primary-color);
    color: white;
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
    transition: transform var(--transition), background-color var(--transition);
  }
  
  .project-link:hover {
    background-color: var(--secondary-color);
    transform: translateY(-2px);
  }
  
  .project-info {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
  
  .project-title {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: var(--text-color);
  }
  
  .project-description {
    color: var(--text-light);
    margin-bottom: 1.5rem;
    flex-grow: 1;
  }
  
  .project-technologies {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: auto;
  }
  
  .project-tech {
    background-color: var(--background-color);
    border: 1px solid var(--border-color);
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.85rem;
    color: var(--text-light);
  }
  
  @media (max-width: 768px) {
    .projects-section {
      padding: 6rem 1.5rem;
    }
    
    .section-title {
      font-size: 2.5rem;
      margin-bottom: 3rem;
    }
    
    .projects-grid {
      grid-template-columns: 1fr;
    }
  }
</style> 